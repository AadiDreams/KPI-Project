<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Incidents - Security Head</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="icon" type="image/png" href="/images/IRIS.png">

    <style>
.tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .tab {
            padding: 10px 20px;
            background-color: #fff;
            border: 1px solid #b30000;
            color: #b30000;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .tab.active {
            background-color: #b30000;
            color: #fff;
        }

        .reports-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .report-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-bottom: 10px;
            transition: all 0.3s ease;
        }

        .report-item:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .report-buttons {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 5px 10px;
            color: #fff;
            background-color: #b30000;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn:hover {
            background-color: #cc0000;
        }
        .tabs-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
}

.take-action {
    margin-left: auto;
    padding: 10px 20px;
    background-color: #b30000;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.take-action:hover {
    background-color: #cc0000;
}

    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <%- include('partials/sidebar', { active: 'reports' }) %>

        <!-- Main Content -->
        <main class="main-content">
            <div class="top-bar">
                <div class="profile">
                    <span>Welcome,<%=name%></span>
                    <div class="profile-icon">ðŸ‘¤</div>
                </div>
                <div class="notification">
                    <span>ðŸ””</span>
                </div>
            </div>

            <div class="content-area">
                <h2>Investigation Reports</h2>
                <!-- Tabs for toggling -->
                <div class="tabs-container" style="display: flex; align-items: center; justify-content: space-between;">
                    <div class="tabs">
                        <div class="tab active" id="new-tab">New</div>
                        <div class="tab" id="new-tab">Pending</div>
                        <div class="tab" id="pending-tab">Solved</div>
                    </div>
                </div>
                

                <!-- Reports Sections -->
                <div class="reports-section" id="new-reports">
                    <ul class="reports-list">
                        <% reportsNew.forEach(report => { %>
                            <li class="report-item">
                                <span>UID: <%= report.uid %> &nbsp;&nbsp;|&nbsp;&nbsp; Incident: <%= report.type_of_incident %> &nbsp;&nbsp;|&nbsp;&nbsp; Send to: <%= report.department %></span>
                                <div class="report-buttons">
                                    <!-- <button class="btn">Print</button> -->
                                    
                                </div>
                            </li>
                        <% }) %>
                    </ul>
                </div>

                <div class="reports-section" id="pending-reports" style="display: none;">
                    <ul class="reports-list">
                        <% reportsPending.forEach(report => { %>
                            <li class="report-item">
                                <span>UID: <%= report.uid %> &nbsp;&nbsp;|&nbsp;&nbsp; Incident: <%= report.type_of_incident %> &nbsp;&nbsp;|&nbsp;&nbsp; Send to: <%= report.department %></span>
                                <div class="report-buttons">
                                    <button class="btn">Remarks</button>
                                    <button class="btn action-taken" data-uid="<%= report.uid %>" data-dept="<%= report.department %>">Close Investigation</button>
                                </div>
                            </li>
                        <% }) %>
                    </ul>
                </div>

                <div class="reports-section" id="solved-reports" style="display: none;">
                    <ul class="reports-list">
                        <% reportsSolved.forEach(report => { %>
                            <li class="report-item">
                                <span>UID: <%= report.uid %> &nbsp;&nbsp;|&nbsp;&nbsp; Incident: <%= report.type_of_incident %> &nbsp;&nbsp;|&nbsp;&nbsp; Send to: <%= report.department %></span>
                                <div class="report-buttons">
                                    <!-- <button class="btn">Print</button> -->
                                    <!-- <button class="btn">Take Action</button> -->
                                </div>
                            </li>
                        <% }) %>
                    </ul>
                </div>

                
                <!-- Modal for displaying remarks -->
<div id="remarks-modal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border: 1px solid #ccc; padding: 20px; z-index: 1000; border-radius: 10px;">
    <h3>Remarks</h3>
    <p id="remarks-content">Loading...</p>
    <button id="close-modal" class="btn">Close</button>
</div>
<div id="modal-overlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 999;"></div>


            </div>
        </main>
    </div>

    <script>
        const tabs = document.querySelectorAll(".tab");
        const sections = document.querySelectorAll(".reports-section");

        tabs.forEach((tab, index) => {
            tab.addEventListener("click", () => {
                // Remove active class from all tabs
                tabs.forEach(t => t.classList.remove("active"));
                // Add active class to the clicked tab
                tab.classList.add("active");

                // Hide all sections
                sections.forEach(section => (section.style.display = "none"));
                // Show the corresponding section
                sections[index].style.display = "block";
                
            });
        });

        document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".btn.action-taken");

    buttons.forEach(button => {
        button.addEventListener("click", async (event) => {
            const uid = event.target.getAttribute("data-uid");
            const departmentID = event.target.getAttribute("data-dept");
            console.log("uid:", uid);
            console.log("dept:", departmentID);
            try {
                const response = await fetch(`/security-head/investreports/update-report-status`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ uid, departmentID }),
                });

                const result = await response.json();

                if (result.success) {
                    alert("Report status updated successfully!");
                } else {
                    alert(result.message || "Failed to update report status. Please try again.");
                }
            } catch (error) {
                console.error("Error updating report status:", error);
                alert("An error occurred. Please try again later.");
            }
        });
    });
});


document.addEventListener("DOMContentLoaded", () => {
    const remarkButtons = document.querySelectorAll(".btn");

    remarkButtons.forEach(button => {
        if (button.textContent.trim() === "Remarks") {
            button.addEventListener("click", async (event) => {
                const reportItem = event.target.closest(".report-item");
                const uid = reportItem.querySelector("[data-uid]").getAttribute("data-uid");
                const departmentID = reportItem.querySelector("[data-dept]").getAttribute("data-dept");

                try {
                    const response = await fetch(`/security-head/investreports/remarks?uid=${uid}&department=${departmentID}`);
                    
                    if (response.ok) {
                        const result = await response.json();
                        showRemarksDialog(result.remarks);
                    } else {
                        alert("Failed to fetch remarks. Please try again.");
                    }
                } catch (error) {
                    console.error("Error fetching remarks:", error);
                    alert("An error occurred. Please try again later.");
                }
            });
        }
    });
});

// Function to display remarks in a dialog
function showRemarksDialog(remarks) {
    const dialog = document.createElement("div");
    dialog.style.position = "fixed";
    dialog.style.top = "50%";
    dialog.style.left = "50%";
    dialog.style.transform = "translate(-50%, -50%)";
    dialog.style.backgroundColor = "#fff";
    dialog.style.padding = "20px";
    dialog.style.border = "1px solid #ccc";
    dialog.style.boxShadow = "0 4px 8px rgba(0, 0, 0, 0.1)";
    dialog.style.borderRadius = "8px";
    dialog.style.zIndex = "1000";

    dialog.innerHTML = `
        <h3>Remarks</h3>
        <p>${remarks}</p>
        <button id="close-dialog" style="margin-top: 10px; padding: 5px 10px; background-color: #b30000; color: #fff; border: none; border-radius: 3px; cursor: pointer;">Close</button>
    `;

    document.body.appendChild(dialog);

    const closeButton = dialog.querySelector("#close-dialog");
    closeButton.addEventListener("click", () => dialog.remove());
}

    </script>
</body>
</html>